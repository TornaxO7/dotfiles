{ config, pkgs, username, ... }:
{
  imports = [
    ./home-manager.nix
  ];

  config = {
    boot = {
      initrd.systemd.network.wait-online.enable = false;
      tmp.cleanOnBoot = true;
      loader = {
        systemd-boot.enable = true;
        efi.canTouchEfiVariables = true;
        efi.efiSysMountPoint = "/boot";
      };
    };

    nix = {
      package = pkgs.nix;

      settings = {
        experimental-features = [ "nix-command" "flakes" ];
        auto-optimise-store = true;
        trusted-users = [ config.users.users.tornax.name ];
      };
    };

    networking.hosts = {
      # "127.0.0.1" = [ "www.youtube.com" ];
    };

    nixpkgs = {
      config.allowUnfree = true;
    };

    fonts.packages = with pkgs; [
      (nerdfonts.override { fonts = [ "FiraCode" "Hack" ]; })
    ];

    environment = {
      pathsToLink = [ "/share/zsh" ];
      sessionVariables = {
        MOZ_USE_XINPUT2 = "1";
      };
      systemPackages = with pkgs; [
        tailscale
      ];
    };

    i18n = {
      defaultLocale = "en_US.UTF-8";
      extraLocaleSettings = {
        LC_ADDRESS = "de_DE.UTF-8";
        LC_IDENTIFICATION = "de_DE.UTF-8";
        LC_MEASUREMENT = "de_DE.UTF-8";
        LC_MONETARY = "de_DE.UTF-8";
        LC_NAME = "de_DE.UTF-8";
        LC_NUMERIC = "de_DE.UTF-8";
        LC_PAPER = "de_DE.UTF-8";
        LC_TELEPHONE = "de_DE.UTF-8";
        LC_TIME = "de_DE.UTF-8";
      };
    };

    console.keyMap = "bone";

    programs = {
      git.enable = true;
      fish.enable = true;
      ssh.askPassword = "${pkgs.x11_ssh_askpass}/libexec/x11-ssh-askpass";
    };

    users = {
      defaultUserShell = pkgs.fish;

      groups = {
        plugdev = { };
      };

      users = rec {
        tornax = {
          name = username;
          isNormalUser = true;
          description = username;
          extraGroups = [
            "audio"
            "lp"
            "netdev"
            "networkmanager"
            "paperless"
            "plugdev"
            "video"
            "wheel"
            "docker"
          ];
          openssh.authorizedKeys.keys = [
            "sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAIKYt8yowEzE4esfqvtHUz3xssgpe2IOGpsN/Vo5PtRD1AAAABHNzaDo="
            "sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAILKD6K2md+9ItTDpBjk2sXldOZNCcKV013PExYOfoJqsAAAABHNzaDo="
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILQpLDXEFoPLUzT6a1cEh4j9OEyOpkcVQJ7jVAsQywvz Generated By Termius"
            "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEwQ1FO2lkd7ecYc/3GCo2yTWgo1V86uYUpX87bzFPhU tornax@pc"
          ];
        };
        root.openssh.authorizedKeys.keys = tornax.openssh.authorizedKeys.keys;
      };
    };

    systemd.network.wait-online.enable = false;

    security.sudo-rs = {
      enable = true;
      wheelNeedsPassword = false;
    };

    services = {
      openssh.enable = true;
      tailscale.enable = true;
    };

    virtualisation.podman.enable = true;

    system.stateVersion = "22.11";
    time.timeZone = "Europe/Berlin";
  };
}
