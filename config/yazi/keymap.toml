# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]
keymap = [
  { on = [
    "S",
  ], run = "shell \"$SHELL\" --block --confirm", desc = "Open shell here" },
  { on = [
    "<Esc>",
  ], run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
  { on = [
    "q",
  ], run = "quit", desc = "Exit the process" },
  { on = [
    "Q",
  ], run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
  { on = [
    "<C-q>",
  ], run = "close", desc = "Close the current tab, or quit if it is last tab" },
  { on = [
    "<C-a>",
  ], run = "select_all", desc = "Select all entries" },

  # Navigation
  { on = [
    "k",
  ], run = "arrow -1", desc = "Move cursor up" },
  { on = [
    "j",
  ], run = "arrow 1", desc = "Move cursor down" },
  { on = [
    "<C-u>",
  ], run = "arrow -50%", desc = "Move cursor up half page" },
  { on = [
    "<C-d>",
  ], run = "arrow 50%", desc = "Move cursor down half page" },
  { on = [
    "h",
  ], run = [
    "leave",
    "escape --visual --select",
  ], desc = "Go back to the parent directory" },
  { on = [
    "l",
  ], run = "plugin --sync smart-enter", desc = "Enter the child directory" },

  { on = [
    "<C-o>",
  ], run = "back", desc = "Go back to the previous directory" },
  { on = [
    "<C-i>",
  ], run = "forward", desc = "Go forward to the next directory" },

  { on = [
    "<A-k>",
  ], run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = [
    "<A-j>",
  ], run = "seek 5", desc = "Seek down 5 units in the preview" },
  # Selection
  { on = [
    "<Space>",
  ], run = [
    "select --state=none",
    "arrow 1",
  ], desc = "Toggle the current selection state" },
  { on = [
    "v",
  ], run = "visual_mode", desc = "Enter visual mode (selection mode)" },
  { on = [
    "V",
  ], run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },
  { on = [
    "<C-v>",
  ], run = "select_all --state=none", desc = "Inverse selection of all files" },

  # Operation
  # { on = [
  #   "e",
  # ], run = "open", desc = "Open the selected files" },
  # { on = [
  #   "E",
  # ], run = "open --interactive", desc = "Open the selected files interactively" },
  # { on = [
  #   "<Enter>",
  # ], run = "open", desc = "Open the selected files" },
  # { on = [
  #   "<C-Enter>",
  # ], run = "open --interactive", desc = "Open the selected files interactively" },
  # yank
  { on = [
    "y",
    "y",
  ], run = [
    "yank",
    "escape --visual --select",
  ], desc = "Copy the selected files" },

  { on = [
    "y",
    "f",
  ], run = "copy path", desc = "Copy the absolute path" },
  { on = [
    "y",
    "d",
  ], run = "copy dirname", desc = "Copy the path of the parent directory" },
  { on = [
    "y",
    "x",
  ], run = [
    "yank --cut",
    "escape --visual --select",
  ], desc = "Cut the selected files" },
  { on = [
    "p",
  ], run = "paste", desc = "Paste the files" },
  { on = [
    "P",
  ], run = "paste --force", desc = "Paste the files (overwrite if the destination exists)" },
  { on = [
    "-",
  ], run = "link", desc = "Symlink the absolute path of files" },
  { on = [
    "_",
  ], run = "link --relative", desc = "Symlink the relative path of files" },
  { on = [
    "d",
    "d",
  ], run = [
    "remove",
    "escape --visual --select",
  ], desc = "Move the files to the trash" },
  { on = [
    "d",
    "D",
  ], run = [
    "remove --permanently",
    "escape --visual --select",
  ], desc = "Permanently delete the files" },
  { on = [
    "a",
  ], run = "create", desc = "Create a file or directory (ends with / for directories)" },
  { on = [
    "r",
  ], run = "rename --cursor=before_ext", desc = "Rename a file or directory" },
  { on = [
    ":",
  ], run = "shell --block --interactive", desc = "Run a shell command (block the UI until the command finishes)" },
  { on = [
    ".",
  ], run = "hidden toggle", desc = "Toggle the visibility of hidden files" },

  # searching/Filter
  { on = [
    "f",
    "n",
  ], run = "search fd", desc = "Search files by name using fd" },
  { on = [
    "f",
    "r",
  ], run = "search rg", desc = "Search files by content using ripgrep" },
  { on = [
    "f",
    "s",
  ], run = "filter --smart", desc = "Filter the files" },

  { on = [
    "z",
  ], run = "plugin zoxide", desc = "Jump to a directory using zoxide" },
  { on = [
    "Z",
  ], run = "jump fzf", desc = "Jump to a directory, or reveal a file using fzf" },

  # Linemode
  { on = [
    "m",
    "s",
  ], run = "linemode size", desc = "Set linemode to size" },
  { on = [
    "m",
    "p",
  ], run = "linemode permissions", desc = "Set linemode to permissions" },
  { on = [
    "m",
    "m",
  ], run = "linemode mtime", desc = "Set linemode to mtime" },
  { on = [
    "m",
    "n",
  ], run = "linemode none", desc = "Set linemode to none" },

  # Find
  { on = [
    "/",
  ], run = "find --smart", desc = "Find next file" },
  { on = [
    "n",
  ], run = "find_arrow", desc = "Go to next found file" },
  { on = [
    "N",
  ], run = "find_arrow --previous", desc = "Go to previous found file" },

  # Sorting
  { on = [
    "s",
    "m",
  ], run = "sort modified --dir-first", desc = "Sort by modified time" },
  { on = [
    "s",
    "M",
  ], run = "sort modified --reverse --dir-first", desc = "Sort by modified time (reverse)" },
  { on = [
    "s",
    "c",
  ], run = "sort created --dir-first", desc = "Sort by created time" },
  { on = [
    "s",
    "C",
  ], run = "sort created --reverse --dir-first", desc = "Sort by created time (reverse)" },
  { on = [
    "s",
    "e",
  ], run = "sort extension --dir-first", desc = "Sort by extension" },
  { on = [
    "s",
    "E",
  ], run = "sort extension --reverse --dir-first", desc = "Sort by extension (reverse)" },
  { on = [
    "s",
    "a",
  ], run = "sort alphabetical --dir-first", desc = "Sort alphabetically" },
  { on = [
    "s",
    "A",
  ], run = "sort alphabetical --reverse --dir-first", desc = "Sort alphabetically (reverse)" },
  { on = [
    "s",
    "n",
  ], run = "sort natural --dir-first", desc = "Sort naturally" },
  { on = [
    "s",
    "N",
  ], run = "sort natural --reverse --dir-first", desc = "Sort naturally (reverse)" },
  { on = [
    "s",
    "s",
  ], run = "sort size --dir-first", desc = "Sort by size" },
  { on = [
    "s",
    "S",
  ], run = "sort size --reverse --dir-first", desc = "Sort by size (reverse)" },

  # Tasks
  { on = [
    "w",
  ], run = "tasks_show", desc = "Show the tasks manager" },

  # Goto
  { on = [
    "g",
    "h",
  ], run = "cd ~", desc = "Go to the home directory" },
  { on = [
    "g",
    "d",
  ], run = "cd ~/dotfiles", desc = "Go to the dotfiles directory" },
  { on = [
    "g",
    "t",
  ], run = "cd /tmp", desc = "Go to the temporary directory" },
  { on = [
    "c",
    "d",
  ], run = "cd --interactive", desc = "Go to a directory interactively" },
  { on = [
    "g",
    "g",
  ], run = "arrow -99999999", desc = "Move cursor to the top" },
  { on = [
    "g",
    "e",
  ], run = "arrow 99999999", desc = "Move cursor to the bottom" },

  # Help
  { on = [
    "?",
  ], run = "help", desc = "Open help" },
]

prepend_keymap = [
  { on = [
    "m",
  ], run = "plugin bookmarks-persistence --args=save", desc = "Save current position as a bookmark" },
  { on = [
    "'",
  ], run = "plugin bookmarks-persistence --args=jump", desc = "Jump to a bookmark" },
  { on = [
    "b",
    "d",
  ], run = "plugin bookmarks-persistence --args=delete", desc = "Delete a bookmark" },
  { on = [
    "b",
    "D",
  ], run = "plugin bookmarks-persistence --args=delete_all", desc = "Delete all bookmarks" },
]

[tasks]
keymap = [
  { on = [
    "<Esc>",
  ], run = "close", desc = "Hide the task manager" },
  { on = [
    "<C-q>",
  ], run = "close", desc = "Hide the task manager" },
  { on = [
    "w",
  ], run = "close", desc = "Hide the task manager" },
  { on = [
    "k",
  ], run = "arrow -1", desc = "Move cursor up" },
  { on = [
    "j",
  ], run = "arrow 1", desc = "Move cursor down" },
  { on = [
    "<Enter>",
  ], run = "inspect", desc = "Inspect the task" },
  { on = [
    "d",
    "d",
  ], run = "cancel", desc = "Cancel the task" },

  { on = [
    "~",
  ], run = "help", desc = "Open help" },
]

[select]
keymap = [
  { on = [
    "<C-q>",
  ], run = "close", desc = "Cancel selection" },
  { on = [
    "<Esc>",
  ], run = "close", desc = "Cancel selection" },
  { on = [
    "<Enter>",
  ], run = "close --submit", desc = "Submit the selection" },
  { on = [
    "k",
  ], run = "arrow -1", desc = "Move cursor up" },
  { on = [
    "j",
  ], run = "arrow 1", desc = "Move cursor down" },
  { on = [
    "~",
  ], run = "help", desc = "Open help" },
]

[input]
keymap = [
  { on = [
    "<C-q>",
  ], run = "close", desc = "Cancel input" },
  { on = [
    "<Enter>",
  ], run = "close --submit", desc = "Submit the input" },
  { on = [
    "<Esc>",
  ], run = "escape", desc = "Go back the normal mode, or cancel input" },

  # Mode
  { on = [
    "i",
  ], run = "insert", desc = "Enter insert mode" },
  { on = [
    "a",
  ], run = "insert --append", desc = "Enter append mode" },
  { on = [
    "I",
  ], run = [
    "move -999",
    "insert",
  ], desc = "Move to the BOL, and enter insert mode" },
  { on = [
    "A",
  ], run = [
    "move 999",
    "insert --append",
  ], desc = "Move to the EOL, and enter append mode" },
  { on = [
    "v",
  ], run = "visual", desc = "Enter visual mode" },
  { on = [
    "V",
  ], run = [
    "move -999",
    "visual",
    "move 999",
  ], desc = "Enter visual mode and select all" },

  # Character-wise movement
  { on = [
    "h",
  ], run = "move -1", desc = "Move back a character" },
  { on = [
    "l",
  ], run = "move 1", desc = "Move forward a character" },

  # Word-wise movement
  { on = [
    "b",
  ], run = "backward", desc = "Move back to the start of the current or previous word" },
  { on = [
    "w",
  ], run = "forward", desc = "Move forward to the start of the next word" },
  { on = [
    "e",
  ], run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

  # Line-wise movement
  { on = [
    "0",
  ], run = "move -999", desc = "Move to the BOL" },
  { on = [
    "$",
  ], run = "move 999", desc = "Move to the EOL" },

  # Delete
  { on = [
    "<Backspace>",
  ], run = "backspace", desc = "Delete the character before the cursor" },

  # Kill
  { on = [
    "<C-u>",
  ], run = "kill bol", desc = "Kill backwards to the BOL" },
  { on = [
    "<C-k>",
  ], run = "kill eol", desc = "Kill forwards to the EOL" },
  { on = [
    "<C-w>",
  ], run = "kill backward", desc = "Kill backwards to the start of the current word" },
  { on = [
    "<A-d>",
  ], run = "kill forward", desc = "Kill forwards to the end of the current word" },

  # Cut/Yank/Paste
  { on = [
    "d",
  ], run = "delete --cut", desc = "Cut the selected characters" },
  { on = [
    "D",
  ], run = [
    "delete --cut",
    "move 999",
  ], desc = "Cut until the EOL" },
  { on = [
    "c",
  ], run = "delete --cut --insert", desc = "Cut the selected characters, and enter insert mode" },
  { on = [
    "C",
  ], run = [
    "delete --cut --insert",
    "move 999",
  ], desc = "Cut until the EOL, and enter insert mode" },
  { on = [
    "x",
  ], run = [
    "delete --cut",
    "move 1 --in-operating",
  ], desc = "Cut the current character" },
  { on = [
    "y",
  ], run = "yank", desc = "Copy the selected characters" },
  { on = [
    "p",
  ], run = "paste", desc = "Paste the copied characters after the cursor" },
  { on = [
    "P",
  ], run = "paste --before", desc = "Paste the copied characters before the cursor" },

  # Undo/Redo
  { on = [
    "u",
  ], run = "undo", desc = "Undo the last operation" },
  { on = [
    "<C-r>",
  ], run = "redo", desc = "Redo the last operation" },

  # Help
  { on = [
    "~",
  ], run = "help", desc = "Open help" },
]

[completion]
keymap = [
  { on = [
    "<C-q>",
  ], run = "close", desc = "Cancel completion" },
  { on = [
    "<Tab>",
  ], run = "close --submit", desc = "Submit the completion" },

  { on = [
    "<A-k>",
  ], run = "arrow -1", desc = "Move cursor up" },
  { on = [
    "<A-j>",
  ], run = "arrow 1", desc = "Move cursor down" },

  { on = [
    "<Up>",
  ], run = "arrow -1", desc = "Move cursor up" },
  { on = [
    "<Down>",
  ], run = "arrow 1", desc = "Move cursor down" },

  { on = [
    "~",
  ], run = "help", desc = "Open help" },
]

[help]
keymap = [
  { on = [
    "<Esc>",
  ], run = "escape", desc = "Clear the filter, or hide the help" },
  { on = [
    "q",
  ], run = "close", desc = "Exit the process" },
  { on = [
    "<C-q>",
  ], run = "close", desc = "Hide the help" },

  # Navigation
  { on = [
    "k",
  ], run = "arrow -1", desc = "Move cursor up" },
  { on = [
    "j",
  ], run = "arrow 1", desc = "Move cursor down" },
  { on = [
    "<C-u>",
  ], run = "arrow -50%", desc = "Move cursor up half page" },
  { on = [
    "<C-d>",
  ], run = "arrow 50%", desc = "Move cursor down half page" },

  # Filtering
  { on = [
    "/",
  ], run = "filter", desc = "Apply a filter for the help items" },
]
